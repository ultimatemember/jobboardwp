1746592707
ijeqzL8hUX%3Acd68c30768154c8d3bb29a9b980a60cd-8010f13679c8a17ddd5dc10c3dd8d6d1
s:18908:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjgwMTBmMTM2NzljOGExN2RkZDVkYzEwYzNkZDhkNmQxIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6ODoiZGF0YS5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czozNzoiaW5jbHVkZXMvYWRtaW4vdGVtcGxhdGVzL2pvYi9kYXRhLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MTMzNzk6Ijw/cGhwIGlmICggISBkZWZpbmVkKCAnQUJTUEFUSCcgKSApIHsKCWV4aXQ7Cn0KCmdsb2JhbCAkcG9zdF9pZDsKCiRnbWFwX2tleSA9IEpCKCktPm9wdGlvbnMoKS0+Z2V0KCAnZ29vZ2xlbWFwcy1hcGkta2V5JyApOwoKJGxvY2F0aW9uICAgICAgICAgID0gJyc7CiRhcHBfY29udGFjdCAgICAgICA9ICcnOwokY29tcGFueV9uYW1lICAgICAgPSAnJzsKJGNvbXBhbnlfd2Vic2l0ZSAgID0gJyc7CiRjb21wYW55X3RhZ2xpbmUgICA9ICcnOwokY29tcGFueV90d2l0dGVyICAgPSAnJzsKJGNvbXBhbnlfZmFjZWJvb2sgID0gJyc7CiRjb21wYW55X2luc3RhZ3JhbSA9ICcnOwokaXNfZmlsbGVkICAgICAgICAgPSBmYWxzZTsKJGlzX2ZlYXR1cmVkICAgICAgID0gZmFsc2U7CiRmZWF0dXJlZF9vcmRlciAgICA9ICcnOwokZXhwaXJ5X2RhdGUgICAgICAgPSAnJzsKJGxvY2F0aW9uX3R5cGUgICAgID0gJzAnOwokYXV0aG9yICAgICAgICAgICAgPSBnZXRfY3VycmVudF91c2VyX2lkKCk7CiRqb2JfbG9jYXRpb25fZGF0YSA9ICcnOwokam9iX3R5cGUgICAgICAgICAgPSAnJzsKJGpvYl9jYXRlZ29yeSAgICAgID0gJyc7Cgokc2FsYXJ5X3R5cGUgICAgICAgID0gJyc7CiRzYWxhcnlfYW1vdW50X3R5cGUgPSAnbnVtZXJpYyc7CiRzYWxhcnlfYW1vdW50ICAgICAgPSAnJzsKJHNhbGFyeV9taW5fYW1vdW50ICA9ICcnOwokc2FsYXJ5X21heF9hbW91bnQgID0gJyc7CiRzYWxhcnlfcGVyaW9kICAgICAgPSAnJzsKCiR1c2VycyA9IGFycmF5KAoJJzAnID0+IF9fKCAnR3Vlc3QnLCAnam9iYm9hcmR3cCcgKSwKKTsKCiR1c2Vyc19xdWVyeSA9IGdldF91c2VycygKCWFycmF5KAoJCSdmaWVsZHMnID0+IGFycmF5KCAnSUQnLCAnZGlzcGxheV9uYW1lJyApLAoJKQopOwoKZm9yZWFjaCAoICR1c2Vyc19xdWVyeSBhcyAkdXNlciApIHsKCSR1c2Vyc1sgJHVzZXItPklEIF0gPSAkdXNlci0+ZGlzcGxheV9uYW1lOwp9CgokdHlwZXMgPSBnZXRfdGVybXMoCglhcnJheSgKCQkndGF4b25vbXknICAgPT4gJ2piLWpvYi10eXBlJywKCQknaGlkZV9lbXB0eScgPT4gZmFsc2UsCgkpCik7CgokdHlwZXNfb3B0aW9ucyA9IGFycmF5KCk7CmlmICggZW1wdHkoIEpCKCktPm9wdGlvbnMoKS0+Z2V0KCAncmVxdWlyZWQtam9iLXR5cGUnICkgKSApIHsKCSR0eXBlc19vcHRpb25zWycnXSA9IF9fKCAnKE5vbmUpJywgJ2pvYmJvYXJkd3AnICk7Cn0KZm9yZWFjaCAoICR0eXBlcyBhcyAkdCApIHsKCSR0eXBlc19vcHRpb25zWyAkdC0+dGVybV9pZCBdID0gJHQtPm5hbWU7Cn0KCmlmICggJHBvc3RfaWQgKSB7CgkkbG9jYXRpb25fdHlwZSA9IGdldF9wb3N0X21ldGEoICRwb3N0X2lkLCAnamItbG9jYXRpb24tdHlwZScsIHRydWUgKTsKCSRsb2NhdGlvbiAgICAgID0gZ2V0X3Bvc3RfbWV0YSggJHBvc3RfaWQsICdqYi1sb2NhdGlvbicsIHRydWUgKTsKCgkkam9iX2xvY2F0aW9uX2RhdGEgPSBKQigpLT5jb21tb24oKS0+am9iKCktPmdldF9sb2NhdGlvbl9kYXRhKCAkcG9zdF9pZCApOwoKCSRhcHBfY29udGFjdCAgICAgICA9IGdldF9wb3N0X21ldGEoICRwb3N0X2lkLCAnamItYXBwbGljYXRpb24tY29udGFjdCcsIHRydWUgKTsKCSRjb21wYW55X25hbWUgICAgICA9IGdldF9wb3N0X21ldGEoICRwb3N0X2lkLCAnamItY29tcGFueS1uYW1lJywgdHJ1ZSApOwoJJGNvbXBhbnlfd2Vic2l0ZSAgID0gZ2V0X3Bvc3RfbWV0YSggJHBvc3RfaWQsICdqYi1jb21wYW55LXdlYnNpdGUnLCB0cnVlICk7CgkkY29tcGFueV90YWdsaW5lICAgPSBnZXRfcG9zdF9tZXRhKCAkcG9zdF9pZCwgJ2piLWNvbXBhbnktdGFnbGluZScsIHRydWUgKTsKCSRjb21wYW55X3R3aXR0ZXIgICA9IGdldF9wb3N0X21ldGEoICRwb3N0X2lkLCAnamItY29tcGFueS10d2l0dGVyJywgdHJ1ZSApOwoJJGNvbXBhbnlfZmFjZWJvb2sgID0gZ2V0X3Bvc3RfbWV0YSggJHBvc3RfaWQsICdqYi1jb21wYW55LWZhY2Vib29rJywgdHJ1ZSApOwoJJGNvbXBhbnlfaW5zdGFncmFtID0gZ2V0X3Bvc3RfbWV0YSggJHBvc3RfaWQsICdqYi1jb21wYW55LWluc3RhZ3JhbScsIHRydWUgKTsKCSRpc19maWxsZWQgICAgICAgICA9IEpCKCktPmNvbW1vbigpLT5qb2IoKS0+aXNfZmlsbGVkKCAkcG9zdF9pZCApOwoJJGlzX2ZlYXR1cmVkICAgICAgID0gSkIoKS0+Y29tbW9uKCktPmpvYigpLT5pc19mZWF0dXJlZCggJHBvc3RfaWQgKTsKCSRmZWF0dXJlZF9vcmRlciAgICA9IGdldF9wb3N0X21ldGEoICRwb3N0X2lkLCAnamItZmVhdHVyZWQtb3JkZXInLCB0cnVlICk7Cgkkam9iX3R5cGUgICAgICAgICAgPSAnJzsKCSRqb2JfY2F0ZWdvcnkgICAgICA9ICcnOwoKCWlmICggSkIoKS0+b3B0aW9ucygpLT5nZXQoICdqb2Itc2FsYXJ5JyApICkgewoJCSRzYWxhcnlfdHlwZSAgICAgICAgPSBnZXRfcG9zdF9tZXRhKCAkcG9zdF9pZCwgJ2piLXNhbGFyeS10eXBlJywgdHJ1ZSApOwoJCSRzYWxhcnlfYW1vdW50X3R5cGUgPSBnZXRfcG9zdF9tZXRhKCAkcG9zdF9pZCwgJ2piLXNhbGFyeS1hbW91bnQtdHlwZScsIHRydWUgKTsKCQkkc2FsYXJ5X2Ftb3VudCAgICAgID0gZ2V0X3Bvc3RfbWV0YSggJHBvc3RfaWQsICdqYi1zYWxhcnktYW1vdW50JywgdHJ1ZSApOwoJCSRzYWxhcnlfbWluX2Ftb3VudCAgPSBnZXRfcG9zdF9tZXRhKCAkcG9zdF9pZCwgJ2piLXNhbGFyeS1taW4tYW1vdW50JywgdHJ1ZSApOwoJCSRzYWxhcnlfbWF4X2Ftb3VudCAgPSBnZXRfcG9zdF9tZXRhKCAkcG9zdF9pZCwgJ2piLXNhbGFyeS1tYXgtYW1vdW50JywgdHJ1ZSApOwoJCSRzYWxhcnlfcGVyaW9kICAgICAgPSBnZXRfcG9zdF9tZXRhKCAkcG9zdF9pZCwgJ2piLXNhbGFyeS1wZXJpb2QnLCB0cnVlICk7Cgl9CgoJLy8gd29ya2Fyb3VuZCBvbiB0aGUgc3VibWlzc2lvbiBmb3JtIGJlY2F1c2UgSm9iIFR5cGUgaXNuJ3QgbXVsdGlwbGUgZHJvcGRvd24KCSR0eXBlcyA9IHdwX2dldF9wb3N0X3Rlcm1zKAoJCSRwb3N0X2lkLAoJCSdqYi1qb2ItdHlwZScsCgkJYXJyYXkoCgkJCSdvcmRlcmJ5JyA9PiAnbmFtZScsCgkJCSdvcmRlcicgICA9PiAnQVNDJywKCQkJJ2ZpZWxkcycgID0+ICdpZHMnLAoJCSkKCSk7CgoJaWYgKCBlbXB0eSggJHR5cGVzICkgfHwgaXNfd3BfZXJyb3IoICR0eXBlcyApICkgewoJCSRqb2JfdHlwZSA9IGFycmF5KCk7Cgl9IGVsc2UgewoJCSRqb2JfdHlwZSA9ICR0eXBlczsKCX0KCglpZiAoIDEgPT09IGNvdW50KCAkam9iX3R5cGUgKSApIHsKCQkkam9iX3R5cGUgPSAkam9iX3R5cGVbMF07Cgl9IGVsc2VpZiAoIGVtcHR5KCAkam9iX3R5cGUgKSApIHsKCQkkam9iX3R5cGUgPSAnJzsKCX0KCglpZiAoIEpCKCktPm9wdGlvbnMoKS0+Z2V0KCAnam9iLWNhdGVnb3JpZXMnICkgKSB7CgkJJGNhdGVnb3JpZXMgPSB3cF9nZXRfcG9zdF90ZXJtcygKCQkJJHBvc3RfaWQsCgkJCSdqYi1qb2ItY2F0ZWdvcnknLAoJCQlhcnJheSgKCQkJCSdvcmRlcmJ5JyA9PiAnbmFtZScsCgkJCQknb3JkZXInICAgPT4gJ0FTQycsCgkJCQknZmllbGRzJyAgPT4gJ2lkcycsCgkJCSkKCQkpOwoKCQlpZiAoIGVtcHR5KCAkY2F0ZWdvcmllcyApIHx8IGlzX3dwX2Vycm9yKCAkY2F0ZWdvcmllcyApICkgewoJCQkkam9iX2NhdGVnb3J5ID0gYXJyYXkoKTsKCQl9IGVsc2UgewoJCQkkam9iX2NhdGVnb3J5ID0gJGNhdGVnb3JpZXM7CgkJfQoKCQkvLyB3b3JrYXJvdW5kIG9uIHRoZSBzdWJtaXNzaW9uIGZvcm0gYmVjYXVzZSBKb2IgQ2F0ZWdvcnkgaXNuJ3QgbXVsdGlwbGUgZHJvcGRvd24KCQlpZiAoIDEgPT09IGNvdW50KCAkam9iX2NhdGVnb3J5ICkgKSB7CgkJCSRqb2JfY2F0ZWdvcnkgPSAkam9iX2NhdGVnb3J5WzBdOwoJCX0gZWxzZWlmICggZW1wdHkoICRqb2JfY2F0ZWdvcnkgKSApIHsKCQkJJGpvYl9jYXRlZ29yeSA9ICcnOwoJCX0KCX0KCgkkam9iID0gZ2V0X3Bvc3QoICRwb3N0X2lkICk7CgoJJGF1dGhvciA9ICRqb2ItPnBvc3RfYXV0aG9yOwoKCSRleHBpcnlfZGF0ZSA9IEpCKCktPmNvbW1vbigpLT5qb2IoKS0+Z2V0X2V4cGlyeV9kYXRlX3JhdyggJHBvc3RfaWQgKTsKfQoKJGpvYl9kZXRhaWxzX2ZpZWxkcyA9IGFycmF5KAoJYXJyYXkoCgkJJ2lkJyAgICAgID0+ICdqYi1hdXRob3InLAoJCSd0eXBlJyAgICA9PiAnc2VsZWN0JywKCQknbGFiZWwnICAgPT4gX18oICdQb3N0ZWQgYnknLCAnam9iYm9hcmR3cCcgKSwKCQknb3B0aW9ucycgPT4gJHVzZXJzLAoJCSd2YWx1ZScgICA9PiAkYXV0aG9yLAoJKSwKCWFycmF5KAoJCSdpZCcgICAgICAgICAgPT4gJ2piLWFwcGxpY2F0aW9uLWNvbnRhY3QnLAoJCSd0eXBlJyAgICAgICAgPT4gJ3RleHQnLAoJCSdsYWJlbCcgICAgICAgPT4gX18oICdBcHBsaWNhdGlvbiBjb250YWN0JywgJ2pvYmJvYXJkd3AnICksCgkJJ2Rlc2NyaXB0aW9uJyA9PiBfXyggJ0l0XCdzIHJlcXVpcmVkIGVtYWlsIG9yIFVSTCBmb3IgdGhlICJhcHBsaWNhdGlvbiIgYXJlYS4nLCAnam9iYm9hcmR3cCcgKSwKCQkndmFsdWUnICAgICAgID0+ICRhcHBfY29udGFjdCwKCQkncmVxdWlyZWQnICAgID0+IHRydWUsCgkpLAoJYXJyYXkoCgkJJ3R5cGUnICAgICA9PiAnc2VsZWN0JywKCQknbGFiZWwnICAgID0+IF9fKCAnSm9iIFR5cGUnLCAnam9iYm9hcmR3cCcgKSwKCQknaWQnICAgICAgID0+ICdqYi1qb2ItdHlwZScsCgkJJ29wdGlvbnMnICA9PiAkdHlwZXNfb3B0aW9ucywKCQkndmFsdWUnICAgID0+ICRqb2JfdHlwZSwKCQkncmVxdWlyZWQnID0+ICEgZW1wdHkoIEpCKCktPm9wdGlvbnMoKS0+Z2V0KCAncmVxdWlyZWQtam9iLXR5cGUnICkgKSwKCQknc2l6ZScgICAgID0+ICdtZWRpdW0nLAoJKSwKKTsKCmlmICggSkIoKS0+b3B0aW9ucygpLT5nZXQoICdqb2ItY2F0ZWdvcmllcycgKSApIHsKCSRjYXRlZ29yaWVzX29wdGlvbnMgPSBhcnJheSgpOwoJJGNhdGVnb3JpZXMgICAgICAgICA9IGdldF90ZXJtcygKCQlhcnJheSgKCQkJJ3RheG9ub215JyAgID0+ICdqYi1qb2ItY2F0ZWdvcnknLAoJCQknaGlkZV9lbXB0eScgPT4gZmFsc2UsCgkJKQoJKTsKCgkkY2F0ZWdvcmllc19vcHRpb25zWycnXSA9IF9fKCAnKE5vbmUpJywgJ2pvYmJvYXJkd3AnICk7CgoJJGNhdF9jaGlsZHJlbiA9IF9nZXRfdGVybV9oaWVyYXJjaHkoICdqYi1qb2ItY2F0ZWdvcnknICk7CgoJJGNhdGVnb3JpZXMgPSBKQigpLT5jb21tb24oKS0+am9iKCktPnByZXBhcmVfY2F0ZWdvcmllc19vcHRpb25zKCAkY2F0ZWdvcmllcywgJGNhdF9jaGlsZHJlbiApOwoJZm9yZWFjaCAoICRjYXRlZ29yaWVzIGFzICRjYXRlZ29yeSApIHsKCQkkY2F0ZWdvcmllc19vcHRpb25zWyAkY2F0ZWdvcnktPnRlcm1faWQgXSA9IHN0cl9yZXBlYXQoICcmIzgyMTE7JywgJGNhdGVnb3J5LT5sZXZlbCApIC4gJyAnIC4gJGNhdGVnb3J5LT5uYW1lOwoJfQoKCSRqb2JfZGV0YWlsc19maWVsZHMgPSBhcnJheV9tZXJnZSgKCQkkam9iX2RldGFpbHNfZmllbGRzLAoJCWFycmF5KAoJCQlhcnJheSgKCQkJCSd0eXBlJyAgICA9PiAnc2VsZWN0JywKCQkJCSdsYWJlbCcgICA9PiBfXyggJ0pvYiBDYXRlZ29yeScsICdqb2Jib2FyZHdwJyApLAoJCQkJJ2lkJyAgICAgID0+ICdqYi1qb2ItY2F0ZWdvcnknLAoJCQkJJ3NpemUnICAgID0+ICdtZWRpdW0nLAoJCQkJJ29wdGlvbnMnID0+ICRjYXRlZ29yaWVzX29wdGlvbnMsCgkJCQkndmFsdWUnICAgPT4gJGpvYl9jYXRlZ29yeSwKCQkJKSwKCQkpCgkpOwp9CgppZiAoIEpCKCktPm9wdGlvbnMoKS0+Z2V0KCAnaW5kaXZpZHVhbC1qb2ItZHVyYXRpb24nICkgKSB7CgkkZXhwaXJ5X2Rlc2NyaXB0aW9uID0gX18oICdMZWF2ZSBlbXB0eSB0byBtYWtlIHRoaXMgam9iIHVuLWV4cGlyZWQuJywgJ2pvYmJvYXJkd3AnICk7Cn0gZWxzZSB7Cgkkc2V0dGluZ3NfbGluayA9IGFkZF9xdWVyeV9hcmcoCgkJYXJyYXkoCgkJCSdwYWdlJyAgICA9PiAnamItc2V0dGluZ3MnLAoJCQknc2VjdGlvbicgPT4gJ2pvYl9zdWJtaXNzaW9uJywKCQkpLAoJCWFkbWluX3VybCggJ2FkbWluLnBocCcgKQoJKTsKCgkvKiogQG5vaW5zcGVjdGlvbiBIdG1sVW5rbm93blRhcmdldCAqLwoJLy8gdHJhbnNsYXRvcnM6ICVzOiBsaW5rIHRvIHRoZSBzZXR0aW5ncyBzZWN0aW9uCgkkZXhwaXJ5X2Rlc2NyaXB0aW9uID0gc3ByaW50ZiggX18oICdJZiBlbXB0eSwgdGhlbiBqb2Igd2lsbCBoYXZlIGFuIGV4cGlyYXRpb24gZGF0ZSBiYXNlZCBvbiB0aGUgPGEgaHJlZj0iJXMjamJfb3B0aW9uc19qb2ItZHVyYXRpb24iPkpvYiBEdXJhdGlvbjwvYT4gc2V0dGluZy4nLCAnam9iYm9hcmR3cCcgKSwgJHNldHRpbmdzX2xpbmsgKTsKfQoKJGpvYl9kZXRhaWxzX2ZpZWxkcyA9IGFycmF5X21lcmdlKAoJJGpvYl9kZXRhaWxzX2ZpZWxkcywKCWFycmF5KAoJCWFycmF5KAoJCQknaWQnICAgICAgPT4gJ2piLWxvY2F0aW9uLXR5cGUnLAoJCQkndHlwZScgICAgPT4gJ3NlbGVjdCcsCgkJCSdsYWJlbCcgICA9PiBfXyggJ0xvY2F0aW9uIFR5cGUnLCAnam9iYm9hcmR3cCcgKSwKCQkJJ29wdGlvbnMnID0+IGFycmF5KAoJCQkJJzAnID0+IF9fKCAnT25zaXRlJywgJ2pvYmJvYXJkd3AnICksCgkJCQknMScgPT4gX18oICdSZW1vdGUnLCAnam9iYm9hcmR3cCcgKSwKCQkJCScnICA9PiBfXyggJ09uc2l0ZSBvciByZW1vdGUnLCAnam9iYm9hcmR3cCcgKSwKCQkJKSwKCQkJJ3ZhbHVlJyAgID0+ICRsb2NhdGlvbl90eXBlLAoJCQknc2l6ZScgICAgPT4gJ3NtYWxsJywKCQkpLAoJCWFycmF5KAoJCQknaWQnICAgICAgICAgID0+ICdqYi1sb2NhdGlvbicsCgkJCSd0eXBlJyAgICAgICAgPT4gZW1wdHkoICRnbWFwX2tleSApID8gJ3RleHQnIDogJ2xvY2F0aW9uX2F1dG9jb21wbGV0ZScsCgkJCSdsYWJlbCcgICAgICAgPT4gX18oICdMb2NhdGlvbicsICdqb2Jib2FyZHdwJyApLAoJCQknZGVzY3JpcHRpb24nID0+IF9fKCAnUmVxdWlyZWQgZm9yIG9uc2l0ZSBqb2JzLicsICdqb2Jib2FyZHdwJyApLAoJCQkndmFsdWUnICAgICAgID0+ICRsb2NhdGlvbiwKCQkJJ3JlcXVpcmVkJyAgICA9PiB0cnVlLAoJCQknY29uZGl0aW9uYWwnID0+IGFycmF5KCAnamItbG9jYXRpb24tdHlwZScsICc9JywgJzAnICksCgkJCSd2YWx1ZV9kYXRhJyAgPT4gJGpvYl9sb2NhdGlvbl9kYXRhLAoJCSksCgkJYXJyYXkoCgkJCSdpZCcgICAgICAgICAgPT4gJ2piLWxvY2F0aW9uLXByZWZlcnJlZCcsCgkJCSd0eXBlJyAgICAgICAgPT4gZW1wdHkoICRnbWFwX2tleSApID8gJ3RleHQnIDogJ2xvY2F0aW9uX2F1dG9jb21wbGV0ZScsCgkJCSdsYWJlbCcgICAgICAgPT4gX18oICdQcmVmZXJyZWQgTG9jYXRpb24nLCAnam9iYm9hcmR3cCcgKSwKCQkJJ2Rlc2NyaXB0aW9uJyA9PiBfXyggJ0xlYXZlIHRoaXMgYmxhbmsgaWYgbG9jYXRpb24gaXMgbm90IGltcG9ydGFudC4nLCAnam9iYm9hcmR3cCcgKSwKCQkJJ3ZhbHVlJyAgICAgICA9PiAkbG9jYXRpb24sCgkJCSdjb25kaXRpb25hbCcgPT4gYXJyYXkoICdqYi1sb2NhdGlvbi10eXBlJywgJyE9JywgJzAnICksCgkJCSd2YWx1ZV9kYXRhJyAgPT4gJGpvYl9sb2NhdGlvbl9kYXRhLAoJCSksCgkJYXJyYXkoCgkJCSdpZCcgICAgICAgPT4gJ2piLWNvbXBhbnktbmFtZScsCgkJCSd0eXBlJyAgICAgPT4gJ3RleHQnLAoJCQknbGFiZWwnICAgID0+IF9fKCAnQ29tcGFueSBuYW1lJywgJ2pvYmJvYXJkd3AnICksCgkJCSd2YWx1ZScgICAgPT4gJGNvbXBhbnlfbmFtZSwKCQkJJ3JlcXVpcmVkJyA9PiB0cnVlLAoJCSksCgkJYXJyYXkoCgkJCSdpZCcgICAgPT4gJ2piLWNvbXBhbnktd2Vic2l0ZScsCgkJCSd0eXBlJyAgPT4gJ3RleHQnLAoJCQknbGFiZWwnID0+IF9fKCAnQ29tcGFueSB3ZWJzaXRlJywgJ2pvYmJvYXJkd3AnICksCgkJCSd2YWx1ZScgPT4gJGNvbXBhbnlfd2Vic2l0ZSwKCQkpLAoJCWFycmF5KAoJCQknaWQnICAgID0+ICdqYi1jb21wYW55LXRhZ2xpbmUnLAoJCQkndHlwZScgID0+ICd0ZXh0JywKCQkJJ2xhYmVsJyA9PiBfXyggJ0NvbXBhbnkgdGFnbGluZScsICdqb2Jib2FyZHdwJyApLAoJCQkndmFsdWUnID0+ICRjb21wYW55X3RhZ2xpbmUsCgkJKSwKCQlhcnJheSgKCQkJJ2lkJyAgICA9PiAnamItY29tcGFueS10d2l0dGVyJywKCQkJJ3R5cGUnICA9PiAndGV4dCcsCgkJCSdsYWJlbCcgPT4gX18oICdDb21wYW55IHR3aXR0ZXInLCAnam9iYm9hcmR3cCcgKSwKCQkJJ3ZhbHVlJyA9PiAkY29tcGFueV90d2l0dGVyLAoJCSksCgkJYXJyYXkoCgkJCSdpZCcgICAgPT4gJ2piLWNvbXBhbnktZmFjZWJvb2snLAoJCQkndHlwZScgID0+ICd0ZXh0JywKCQkJJ2xhYmVsJyA9PiBfXyggJ0NvbXBhbnkgZmFjZWJvb2snLCAnam9iYm9hcmR3cCcgKSwKCQkJJ3ZhbHVlJyA9PiAkY29tcGFueV9mYWNlYm9vaywKCQkpLAoJCWFycmF5KAoJCQknaWQnICAgID0+ICdqYi1jb21wYW55LWluc3RhZ3JhbScsCgkJCSd0eXBlJyAgPT4gJ3RleHQnLAoJCQknbGFiZWwnID0+IF9fKCAnQ29tcGFueSBpbnN0YWdyYW0nLCAnam9iYm9hcmR3cCcgKSwKCQkJJ3ZhbHVlJyA9PiAkY29tcGFueV9pbnN0YWdyYW0sCgkJKSwKCQlhcnJheSgKCQkJJ2lkJyAgICAgICAgICA9PiAnamItaXMtZmlsbGVkJywKCQkJJ3R5cGUnICAgICAgICA9PiAnY2hlY2tib3gnLAoJCQknbGFiZWwnICAgICAgID0+IF9fKCAnUG9zaXRpb24gRmlsbGVkJywgJ2pvYmJvYXJkd3AnICksCgkJCSdkZXNjcmlwdGlvbicgPT4gX18oICdGaWxsZWQgbGlzdGluZ3Mgd2lsbCBubyBsb25nZXIgYWNjZXB0IGFwcGxpY2F0aW9ucy4nLCAnam9iYm9hcmR3cCcgKSwKCQkJJ3ZhbHVlJyAgICAgICA9PiAkaXNfZmlsbGVkLAoJCSksCgkJYXJyYXkoCgkJCSdpZCcgICAgICAgICAgPT4gJ2piLWV4cGlyeS1kYXRlJywKCQkJJ3R5cGUnICAgICAgICA9PiAnZGF0ZXBpY2tlcicsCgkJCSdsYWJlbCcgICAgICAgPT4gX18oICdFeHBpcnkgRGF0ZScsICdqb2Jib2FyZHdwJyApLAoJCQkndmFsdWUnICAgICAgID0+ICRleHBpcnlfZGF0ZSwKCQkJJ3NpemUnICAgICAgICA9PiAnc21hbGwnLAoJCQknZGVzY3JpcHRpb24nID0+ICRleHBpcnlfZGVzY3JpcHRpb24sCgkJKSwKCQlhcnJheSgKCQkJJ2lkJyAgICAgICAgICA9PiAnamItaXMtZmVhdHVyZWQnLAoJCQkndHlwZScgICAgICAgID0+ICdjaGVja2JveCcsCgkJCSdsYWJlbCcgICAgICAgPT4gX18oICdJcyBGZWF0dXJlZD8nLCAnam9iYm9hcmR3cCcgKSwKCQkJJ3ZhbHVlJyAgICAgICA9PiAkaXNfZmVhdHVyZWQsCgkJCSdzaXplJyAgICAgICAgPT4gJ3NtYWxsJywKCQkJJ2Rlc2NyaXB0aW9uJyA9PiBfXyggJ0FkZCBhIGZlYXR1cmUgb3B0aW9uLicsICdqb2Jib2FyZHdwJyApLAoJCSksCgkJYXJyYXkoCgkJCSdpZCcgICAgICAgICAgPT4gJ2piLWZlYXR1cmVkLW9yZGVyJywKCQkJJ3R5cGUnICAgICAgICA9PiAndGV4dCcsCgkJCSdsYWJlbCcgICAgICAgPT4gX18oICdGZWF0dXJlZCBPcmRlcicsICdqb2Jib2FyZHdwJyApLAoJCQkndmFsdWUnICAgICAgID0+ICRmZWF0dXJlZF9vcmRlciwKCQkJJ2NvbmRpdGlvbmFsJyA9PiBhcnJheSggJ2piLWlzLWZlYXR1cmVkJywgJyE9JywgJzAnICksCgkJKSwKCSkKKTsKCmlmICggSkIoKS0+b3B0aW9ucygpLT5nZXQoICdqb2Itc2FsYXJ5JyApICkgewoJJGN1cnJlbmN5ICAgICAgICA9IEpCKCktPm9wdGlvbnMoKS0+Z2V0KCAnam9iLXNhbGFyeS1jdXJyZW5jeScgKTsKCSRjdXJyZW5jaWVzX2RhdGEgPSBKQigpLT5jb25maWcoKS0+Z2V0KCAnY3VycmVuY2llcycgKTsKCSRjdXJyZW5jeV9zeW1ib2wgPSAkY3VycmVuY2llc19kYXRhWyAkY3VycmVuY3kgXVsnc3ltYm9sJ107CgoJJGpvYl9kZXRhaWxzX2ZpZWxkcyA9IGFycmF5X21lcmdlKAoJCSRqb2JfZGV0YWlsc19maWVsZHMsCgkJYXJyYXkoCgkJCWFycmF5KAoJCQkJJ3R5cGUnICAgICAgICA9PiAnc2VsZWN0JywKCQkJCSdsYWJlbCcgICAgICAgPT4gX18oICdTYWxhcnknLCAnam9iYm9hcmR3cCcgKSwKCQkJCSdwbGFjZWhvbGRlcicgPT4gX18oICdQbGVhc2Ugc2VsZWN0IHNhbGFyeScsICdqb2Jib2FyZHdwJyApLAoJCQkJJ3NpemUnICAgICAgICA9PiAnc21hbGwnLAoJCQkJJ2lkJyAgICAgICAgICA9PiAnamItc2FsYXJ5LXR5cGUnLAoJCQkJJ29wdGlvbnMnICAgICA9PiBhcnJheSgKCQkJCQknJyAgICAgICAgICA9PiBfXyggJ05vdCBzcGVjaWZpZWQnLCAnam9iYm9hcmR3cCcgKSwKCQkJCQknZml4ZWQnICAgICA9PiBfXyggJ0ZpeGVkJywgJ2pvYmJvYXJkd3AnICksCgkJCQkJJ3JlY3VycmluZycgPT4gX18oICdSZWN1cnJpbmcnLCAnam9iYm9hcmR3cCcgKSwKCQkJCSksCgkJCQkncmVxdWlyZWQnICAgID0+ICEgZW1wdHkoIEpCKCktPm9wdGlvbnMoKS0+Z2V0KCAncmVxdWlyZWQtam9iLXNhbGFyeScgKSApLAoJCQkJJ3ZhbHVlJyAgICAgICA9PiAkc2FsYXJ5X3R5cGUsCgkJCSksCgkJCWFycmF5KAoJCQkJJ3R5cGUnICAgICAgICA9PiAnc2VsZWN0JywKCQkJCSdsYWJlbCcgICAgICAgPT4gX18oICdTYWxhcnkgYW1vdW50IHR5cGUnLCAnam9iYm9hcmR3cCcgKSwKCQkJCSdwbGFjZWhvbGRlcicgPT4gX18oICdQbGVhc2Ugc2VsZWN0IGFtb3VudCB0eXBlJywgJ2pvYmJvYXJkd3AnICksCgkJCQknaWQnICAgICAgICAgID0+ICdqYi1zYWxhcnktYW1vdW50LXR5cGUnLAoJCQkJJ29wdGlvbnMnICAgICA9PiBhcnJheSgKCQkJCQknbnVtZXJpYycgPT4gX18oICdOdW1lcmljJywgJ2pvYmJvYXJkd3AnICksCgkJCQkJJ3JhbmdlJyAgID0+IF9fKCAnUmFuZ2UgKG1pbi1tYXgpJywgJ2pvYmJvYXJkd3AnICksCgkJCQkpLAoJCQkJJ3ZhbHVlJyAgICAgICA9PiAkc2FsYXJ5X2Ftb3VudF90eXBlLAoJCQkJJ3NpemUnICAgICAgICA9PiAnc21hbGwnLAoJCQkJJ2NvbmRpdGlvbmFsJyA9PiBhcnJheSggJ2piLXNhbGFyeS10eXBlJywgJyE9JywgJycgKSwKCQkJKSwKCQkJYXJyYXkoCgkJCQkndHlwZScgICAgICAgID0+ICdudW1iZXInLAoJCQkJJ21pbicgICAgICAgICA9PiAwLAoJCQkJJ3N0ZXAnICAgICAgICA9PiAxLAoJCQkJJ3NpemUnICAgICAgICA9PiAnc21hbGwnLAoJCQkJJ3JlcXVpcmVkJyAgICA9PiB0cnVlLAoJCQkJLy8gdHJhbnNsYXRvcnM6ICVzIC0gQ3VycmVuY3kgc3ltYm9sCgkJCQknbGFiZWwnICAgICAgID0+IHNwcmludGYoIF9fKCAnU2FsYXJ5IEFtb3VudCAlcycsICdqb2Jib2FyZHdwJyApLCAkY3VycmVuY3lfc3ltYm9sICksCgkJCQknaWQnICAgICAgICAgID0+ICdqYi1zYWxhcnktYW1vdW50JywKCQkJCSd2YWx1ZScgICAgICAgPT4gJHNhbGFyeV9hbW91bnQsCgkJCQknY29uZGl0aW9uYWwnID0+IGFycmF5KCAnamItc2FsYXJ5LWFtb3VudC10eXBlJywgJz0nLCAnbnVtZXJpYycgKSwKCQkJKSwKCQkJYXJyYXkoCgkJCQkndHlwZScgICAgICAgID0+ICdudW1iZXInLAoJCQkJJ21pbicgICAgICAgICA9PiAwLAoJCQkJJ3N0ZXAnICAgICAgICA9PiAxLAoJCQkJJ3NpemUnICAgICAgICA9PiAnc21hbGwnLAoJCQkJJ3JlcXVpcmVkJyAgICA9PiB0cnVlLAoJCQkJLy8gdHJhbnNsYXRvcnM6ICVzIC0gQ3VycmVuY3kgc3ltYm9sCgkJCQknbGFiZWwnICAgICAgID0+IHNwcmludGYoIF9fKCAnU2FsYXJ5IE1pbiBBbW91bnQgJXMnLCAnam9iYm9hcmR3cCcgKSwgJGN1cnJlbmN5X3N5bWJvbCApLAoJCQkJJ2Rlc2NyaXB0aW9uJyA9PiBfXyggJ1NldCB0byAiMCIgZm9yIGRpc3BsYXlpbmcgb25seSBtYXggYW1vdW50LiAoRS5nLiAiU2FsYXJ5IGlzIHVwIHRvIHttYXhfYW1vdW50fSIpJywgJ2pvYmJvYXJkd3AnICksCgkJCQknaWQnICAgICAgICAgID0+ICdqYi1zYWxhcnktbWluLWFtb3VudCcsCgkJCQkndmFsdWUnICAgICAgID0+ICRzYWxhcnlfbWluX2Ftb3VudCwKCQkJCSdjb25kaXRpb25hbCcgPT4gYXJyYXkoICdqYi1zYWxhcnktYW1vdW50LXR5cGUnLCAnPScsICdyYW5nZScgKSwKCQkJKSwKCQkJYXJyYXkoCgkJCQkndHlwZScgICAgICAgID0+ICdudW1iZXInLAoJCQkJJ21pbicgICAgICAgICA9PiAwLAoJCQkJJ3N0ZXAnICAgICAgICA9PiAxLAoJCQkJJ3NpemUnICAgICAgICA9PiAnc21hbGwnLAoJCQkJJ3JlcXVpcmVkJyAgICA9PiB0cnVlLAoJCQkJLy8gdHJhbnNsYXRvcnM6ICVzIC0gQ3VycmVuY3kgc3ltYm9sCgkJCQknbGFiZWwnICAgICAgID0+IHNwcmludGYoIF9fKCAnU2FsYXJ5IE1heCBBbW91bnQgJXMnLCAnam9iYm9hcmR3cCcgKSwgJGN1cnJlbmN5X3N5bWJvbCApLAoJCQkJJ2Rlc2NyaXB0aW9uJyA9PiBfXyggJ1NldCB0byAiMCIgZm9yIGRpc3BsYXlpbmcgb25seSBtaW4gYW1vdW50LiAoRS5nLiAiU2FsYXJ5IHN0YXJ0cyBmcm9tIHttaW5fYW1vdW50fSIpJywgJ2pvYmJvYXJkd3AnICksCgkJCQknaWQnICAgICAgICAgID0+ICdqYi1zYWxhcnktbWF4LWFtb3VudCcsCgkJCQkndmFsdWUnICAgICAgID0+ICRzYWxhcnlfbWF4X2Ftb3VudCwKCQkJCSdjb25kaXRpb25hbCcgPT4gYXJyYXkoICdqYi1zYWxhcnktYW1vdW50LXR5cGUnLCAnPScsICdyYW5nZScgKSwKCQkJKSwKCQkJYXJyYXkoCgkJCQkndHlwZScgICAgICAgID0+ICdzZWxlY3QnLAoJCQkJJ3JlcXVpcmVkJyAgICA9PiB0cnVlLAoJCQkJJ3NpemUnICAgICAgICA9PiAnc21hbGwnLAoJCQkJJ2xhYmVsJyAgICAgICA9PiBfXyggJ1NhbGFyeSBQZXJpb2QnLCAnam9iYm9hcmR3cCcgKSwKCQkJCSdpZCcgICAgICAgICAgPT4gJ2piLXNhbGFyeS1wZXJpb2QnLAoJCQkJJ29wdGlvbnMnICAgICA9PiBhcnJheSgKCQkJCQknaG91cicgID0+IF9fKCAnSG91cicsICdqb2Jib2FyZHdwJyApLAoJCQkJCSdkYXknICAgPT4gX18oICdEYXknLCAnam9iYm9hcmR3cCcgKSwKCQkJCQknd2VlaycgID0+IF9fKCAnV2VlaycsICdqb2Jib2FyZHdwJyApLAoJCQkJCSdtb250aCcgPT4gX18oICdNb250aCcsICdqb2Jib2FyZHdwJyApLAoJCQkJKSwKCQkJCSd2YWx1ZScgICAgICAgPT4gJHNhbGFyeV9wZXJpb2QsCgkJCQknY29uZGl0aW9uYWwnID0+IGFycmF5KCAnamItc2FsYXJ5LXR5cGUnLCAnPScsICdyZWN1cnJpbmcnICksCgkJCSksCgkJKQoJKTsKfQoKLyoqCiAqIEZpbHRlcnMgdGhlIGpvYiBtZXRhIGZpZWxkcyBpbiB0aGUgbWV0YWJveCAoQWRtaW4gRGFzaGJvYXJkID4gQWRkL0VkaXQgSm9iIHNjcmVlbikuCiAqCiAqIEBzaW5jZSAxLjAKICogQGhvb2sgamJfam9iX2RldGFpbHNfbWV0YWJveF9maWVsZHMKICoKICogQHBhcmFtIHthcnJheX0gJGZpZWxkcyBNZXRhIGZpZWxkcy4KICoKICogQHJldHVybiB7YXJyYXl9IE1ldGEgZmllbGRzLgogKi8KJGZpZWxkcyA9IGFwcGx5X2ZpbHRlcnMoICdqYl9qb2JfZGV0YWlsc19tZXRhYm94X2ZpZWxkcycsICRqb2JfZGV0YWlsc19maWVsZHMgKTsKCkpCKCktPmFkbWluKCktPmZvcm1zKAoJYXJyYXkoCgkJJ2NsYXNzJyAgICAgPT4gJ2piLWRhdGEgamItdGhpcmQtY29sdW1uJywKCQkncHJlZml4X2lkJyA9PiAnamItam9iLW1ldGEnLAoJCSdmaWVsZHMnICAgID0+ICRmaWVsZHMsCgkpCiktPmRpc3BsYXkoKTsKIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319";